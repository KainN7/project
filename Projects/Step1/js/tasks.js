'use strict';

// Какое будет выведено значение? 
// let x = 5; alert( x++ ); // Ответ:5.
// Оператор инктимента, возвращает старое значение, 
// потом возвращает новое.


// Чему равно такое выражение?  
// let y = [ ] + false - null + true; 
// console.log(typeof([] + false)); // 'false'
// console.log(y); // Ответ:NaN

// Что выведет этот код? 
// let y = 1; 
// let x = y = 2;  // код идёт справа налево.
// alert(x); 
// Ответ: 2

// // Чему равна сумма?
// let x = [ ] + 1 + 2;
// console.log(x);
// Ответ: 12

// // Что выведет этот код?
// alert( "1"[0] );
// Ответ: 1

// // Чему равно?
// 2 && 1 && null && 0 && undefined; 
// console.log(2 && 1 && null && 0 && undefined);
// И запинается на лжи.
// Ответ: null.

// // Есть ли разница между выражениями? 
// !!( a && b ) и (a && b)
// console.log(!!( 1 && 2 ) === (1 && 2));
// !! возвращает boolean значение.
// Ответ: false.

// // Что выведет этот код?
                // 3
// alert( null || 2 && 3 || 4 );
// Ответ: 3

// // Правда ли что a == b?
// let a = [1, 2, 3]; let b = [1, 2, 3]; 
// 2 разных хранилища информации, которые содержат 
// одинаковые данные.
// console.log(a == b);
// Ответ: нет

// // Что выведет этот код?
// alert( +"Infinity" ); // вывыдет тип данных число, 
// потому что есть унарный+
// Ответ: Infinity 

// // Верно ли сравнение?
// "Ёжик" > "яблоко"
// console.log("Ёжик" > "яблоко");
// Ответ: false

// // Чему равно?
// 0 || "" || 2 || undefined || true || falsе;
// console.log(0 || "" || 2 || undefined || true || falsе);
// Ответ: 2